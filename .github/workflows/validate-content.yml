name: Validate Content

on:
  pull_request:
    paths:
      - '_**/*.md'
      - '**.md'
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

jobs:
  validate-frontmatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Validate front matter
        run: |
          npm install gray-matter
          node -e "
          const fs = require('fs');
          const path = require('path');
          const matter = require('gray-matter');
          
          function validateFiles(dir) {
            const files = fs.readdirSync(dir);
            let errors = [];
            
            files.forEach(file => {
              const filePath = path.join(dir, file);
              const stat = fs.statSync(filePath);
              
              if (stat.isDirectory() && !file.startsWith('.') && file !== 'node_modules') {
                errors = errors.concat(validateFiles(filePath));
              } else if (file.endsWith('.md')) {
                try {
                  const content = fs.readFileSync(filePath, 'utf8');
                  const parsed = matter(content);
                  
                  // Check required fields
                  if (!parsed.data.title) {
                    errors.push(filePath + ': Missing title in front matter');
                  }
                  
                  // Check collection-specific requirements
                  if (filePath.includes('_community/leaders/') && !parsed.data.affiliation) {
                    errors.push(filePath + ': Leader profiles must have affiliation');
                  }
                } catch (e) {
                  errors.push(filePath + ': ' + e.message);
                }
              }
            });
            
            return errors;
          }
          
          const errors = validateFiles('.');
          if (errors.length > 0) {
            console.error('Validation errors found:');
            errors.forEach(e => console.error(e));
            process.exit(1);
          } else {
            console.log('All files validated successfully');
          }
          "

  check-broken-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      
      - name: Build site
        run: bundle exec jekyll build
      
      - name: Check internal links
        run: |
          bundle exec htmlproofer ./_site \
            --disable-external \
            --allow-hash-href \
            --ignore-files "/.+\\.pdf$/" \
            --ignore-urls "/^#/,/^javascript:/"

  spell-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Spell check
        uses: streetsidesoftware/cspell-action@v5
        with:
          files: |
            **/*.md
            !node_modules
            !vendor
          config: |
            {
              "language": "en",
              "words": [
                "CTGAN",
                "TVAE",
                "SDV",
                "Synthea",
                "Gretel",
                "MDClone",
                "HIPAA",
                "GDPR",
                "PIPEDA",
                "Dwork",
                "Schaar",
                "differentially",
                "tabular",
                "multimodal",
                "anonymisation",
                "pseudonymisation",
                "reidentification"
              ]
            }